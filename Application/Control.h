// Copyright © 2016 BugsEx. All rights reserved.
// Author: Dmitriy Lysenko
// License: http://opensource.org/licenses/MIT
// Site: http://lic-ui.bugsex.net

#pragma once

#include <vector>
#include "..\Strings\Strings.h"
#include "Types.h"
#include "Component.h"
#include "Font.h"

namespace licui
{
	namespace application
	{
		class CControl :public CComponent
		{
			friend CForm;
		public:
			typedef void(*FOnKeyDown)(CControl *sender, const IWindow::KEY key, void *param);
			typedef void(*FOnKeyUp)(CControl *sender, const IWindow::KEY key, void *param);
			typedef void(*FOnChar)(CControl *sender, const wchar_t chr, void *param);
			typedef void(*FOnDeadChar)(CControl *sender, const wchar_t chr, void *param);
			typedef void(*FOnSysKeyDown)(CControl *sender, const IWindow::KEY key, void *param);
			typedef void(*FOnSysKeyUp)(CControl *sender, const IWindow::KEY key, void *param);
			typedef void(*FOnSysChar)(CControl *sender, const wchar_t chr, void *param);
			typedef void(*FOnSysDeadChar)(CControl *sender, const wchar_t chr, void *param);
			typedef void(*FOnMouseMove)(CControl *sender, const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift, void *param);
			typedef void(*FOnLeftMouseButtonDown)(CControl *sender, const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift, void *param);
			typedef void(*FOnLeftMouseButtonUp)(CControl *sender, const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift, void *param);
			typedef void(*FOnLeftMouseButtonDoubleClick)(CControl *sender, const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift, void *param);
			typedef void(*FOnRightMouseButtonDown)(CControl *sender, const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift, void *param);
			typedef void(*FOnRightMouseButtonUp)(CControl *sender, const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift, void *param);
			typedef void(*FOnRightMouseButtonDoubleClick)(CControl *sender, const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift, void *param);
			typedef void(*FOnMiddleMouseButtonDown)(CControl *sender, const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift, void *param);
			typedef void(*FOnMiddleMouseButtonUp)(CControl *sender, const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift, void *param);
			typedef void(*FOnMiddleMouseButtonDoubleClick)(CControl *sender, const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift, void *param);
			typedef void(*FOnMouseVerticalWheel)(CControl *sender, const int x, const int y, const int delta, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift, void *param);
			typedef void(*FOnMouseHorizontalWheel)(CControl *sender, const int x, const int y, const int delta, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift, void *param);

			typedef void(*FOnChangeUseParentFont)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeName)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeHeight)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeWeight)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeItalic)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeUnderline)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeStrikeOut)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeWidth)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeCharSet)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeQuality)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangePitchAndFamily)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeOrientation)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeDistance)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeShadow)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeShadowShift)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeShadowBlur)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeShadowColor)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeColor)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeInterpolate)(CControl *sender, void *param);
			typedef void(*FOnParentFontBeginChange)(CControl *sender, void *param);
			typedef void(*FOnParentFontEndChange)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeSize)(CControl *sender, void *param);
			typedef void(*FOnParentFontChangeStyle)(CControl *sender, void *param);

			typedef void(*FOnFontChangeName)(CControl *sender, void *param);
			typedef void(*FOnFontChangeHeight)(CControl *sender, void *param);
			typedef void(*FOnFontChangeWeight)(CControl *sender, void *param);
			typedef void(*FOnFontChangeItalic)(CControl *sender, void *param);
			typedef void(*FOnFontChangeUnderline)(CControl *sender, void *param);
			typedef void(*FOnFontChangeStrikeOut)(CControl *sender, void *param);
			typedef void(*FOnFontChangeWidth)(CControl *sender, void *param);
			typedef void(*FOnFontChangeCharSet)(CControl *sender, void *param);
			typedef void(*FOnFontChangeQuality)(CControl *sender, void *param);
			typedef void(*FOnFontChangePitchAndFamily)(CControl *sender, void *param);
			typedef void(*FOnFontChangeOrientation)(CControl *sender, void *param);
			typedef void(*FOnFontChangeDistance)(CControl *sender, void *param);
			typedef void(*FOnFontChangeShadow)(CControl *sender, void *param);
			typedef void(*FOnFontChangeShadowShift)(CControl *sender, void *param);
			typedef void(*FOnFontChangeShadowBlur)(CControl *sender, void *param);
			typedef void(*FOnFontChangeShadowColor)(CControl *sender, void *param);
			typedef void(*FOnFontChangeColor)(CControl *sender, void *param);
			typedef void(*FOnFontChangeInterpolate)(CControl *sender, void *param);
			typedef void(*FOnFontBeginChange)(CControl *sender, void *param);
			typedef void(*FOnFontEndChange)(CControl *sender, void *param);
			typedef void(*FOnFontChangeSize)(CControl *sender, void *param);
			typedef void(*FOnFontChangeStyle)(CControl *sender, void *param);

			typedef void(*FOnMouseHover)(CControl *sender, void *param);
			typedef void(*FOnMouseLeave)(CControl *sender, void *param);
			typedef void(*FOnKillFocus)(CControl *sender, void *param);
			typedef void(*FOnSetFocus)(CControl *sender, CControl *old, void *param);
			typedef void(*FOnResetFocus)(CControl *sender, void *param);
			typedef void(*FOnKillCaptureKeyboard)(CControl *sender, void *param);
			typedef void(*FOnKillCaptureMouse)(CControl *sender, void *param);
			typedef void(*FOnSetCaptureKeyboard)(CControl *sender, void *param);
			typedef void(*FOnSetCaptureMouse)(CControl *sender, void *param);
			typedef void(*FOnChangeParentStyle)(CControl *sender, void *param);
			typedef void(*FOnChangeStyle)(CControl *sender, void *param);
			typedef void(*FOnShow)(CControl *sender, void *param);
			typedef void(*FOnBeforeHide)(CControl *sender, void *param);
			typedef void(*FOnHide)(CControl *sender, void *param);
			typedef void(*FOnEnable)(CControl *sender, void *param);
			typedef void(*FOnDisable)(CControl *sender, void *param);
			typedef void(*FOnAttachControl)(CControl *sender, CControl *control, void *param);
			typedef void(*FOnBeforeDetachControl)(CControl *sender, CControl *control, void *param);
			typedef void(*FOnDetachControl)(CControl *sender, CControl *control, void *param);
			typedef void(*FOnPaint)(CControl *sender, APP_RECT clip, void *param);
			typedef void(*FOnParentResize)(CControl *sender, void *param);
			typedef void(*FOnParentMove)(CControl *sender, void *param);
			typedef void(*FOnBeforeResize)(CControl *sender, void *param);
			typedef void(*FOnResize)(CControl *sender, const APP_POINT &old_size, const APP_POINT &new_size, void *param);
			typedef void(*FOnBeforeMove)(CControl *sender, void *param);
			typedef void(*FOnMove)(CControl *sender, const APP_POINT &old_position, const APP_POINT &new_position, void *param);
			typedef void(*FOnChildControlResize)(CControl *sender, CControl *control, const APP_POINT &old_size, const APP_POINT &new_size, void *param);
			typedef void(*FOnChildControlMove)(CControl *sender, CControl *control, const APP_POINT &old_position, const APP_POINT &new_position, void *param);
			typedef void(*FOnBeforeDetachFromControl)(CControl *control, void *param);
			typedef void(*FOnDetachFromControl)(CControl *control, void *param);
			typedef void(*FOnAttachToControl)(CControl *control, void *param);
		private:
			static void FontOnChangeName(void *param);
			static void FontOnChangeHeight(void *param);
			static void FontOnChangeWeight(void *param);
			static void FontOnChangeItalic(void *param);
			static void FontOnChangeUnderline(void *param);
			static void FontOnChangeStrikeOut(void *param);
			static void FontOnChangeWidth(void *param);
			static void FontOnChangeCharSet(void *param);
			static void FontOnChangeQuality(void *param);
			static void FontOnChangePitchAndFamily(void *param);
			static void FontOnChangeOrientation(void *param);
			static void FontOnChangeDistance(void *param);
			static void FontOnChangeShadow(void *param);
			static void FontOnChangeShadowShift(void *param);
			static void FontOnChangeShadowBlur(void *param);
			static void FontOnChangeShadowColor(void *param);
			static void FontOnChangeColor(void *param);
			static void FontOnChangeInterpolate(void *param);
			static void FontOnBeginChange(void *param);
			static void FontOnEndChange(void *param);

			FOnKeyDown m_fOnKeyDown;
			FOnKeyUp m_fOnKeyUp;
			FOnChar m_fOnChar;
			FOnDeadChar m_fOnDeadChar;
			FOnSysKeyDown m_fOnSysKeyDown;
			FOnSysKeyUp m_fOnSysKeyUp;
			FOnSysChar m_fOnSysChar;
			FOnSysDeadChar m_fOnSysDeadChar;
			FOnMouseMove m_fOnMouseMove;
			FOnLeftMouseButtonDown m_fOnLeftMouseButtonDown;
			FOnLeftMouseButtonUp m_fOnLeftMouseButtonUp;
			FOnLeftMouseButtonDoubleClick m_fOnLeftMouseButtonDoubleClick;
			FOnRightMouseButtonDown m_fOnRightMouseButtonDown;
			FOnRightMouseButtonUp m_fOnRightMouseButtonUp;
			FOnRightMouseButtonDoubleClick m_fOnRightMouseButtonDoubleClick;
			FOnMiddleMouseButtonDown m_fOnMiddleMouseButtonDown;
			FOnMiddleMouseButtonUp m_fOnMiddleMouseButtonUp;
			FOnMiddleMouseButtonDoubleClick m_fOnMiddleMouseButtonDoubleClick;
			FOnMouseVerticalWheel m_fOnMouseVerticalWheel;
			FOnMouseHorizontalWheel m_fOnMouseHorizontalWheel;

			FOnChangeUseParentFont m_fOnChangeUseParentFont;
			FOnParentFontChangeName m_fOnParentFontChangeName;
			FOnParentFontChangeHeight m_fOnParentFontChangeHeight;
			FOnParentFontChangeWeight m_fOnParentFontChangeWeight;
			FOnParentFontChangeItalic m_fOnParentFontChangeItalic;
			FOnParentFontChangeUnderline m_fOnParentFontChangeUnderline;
			FOnParentFontChangeStrikeOut m_fOnParentFontChangeStrikeOut;
			FOnParentFontChangeWidth m_fOnParentFontChangeWidth;
			FOnParentFontChangeCharSet m_fOnParentFontChangeCharSet;
			FOnParentFontChangeQuality m_fOnParentFontChangeQuality;
			FOnParentFontChangePitchAndFamily m_fOnParentFontChangePitchAndFamily;
			FOnParentFontChangeOrientation m_fOnParentFontChangeOrientation;
			FOnParentFontChangeDistance m_fOnParentFontChangeDistance;
			FOnParentFontChangeShadow m_fOnParentFontChangeShadow;
			FOnParentFontChangeShadowShift m_fOnParentFontChangeShadowShift;
			FOnParentFontChangeShadowBlur m_fOnParentFontChangeShadowBlur;
			FOnParentFontChangeShadowColor m_fOnParentFontChangeShadowColor;
			FOnParentFontChangeColor m_fOnParentFontChangeColor;
			FOnParentFontChangeInterpolate m_fOnParentFontChangeInterpolate;
			FOnParentFontBeginChange m_fOnParentFontBeginChange;
			FOnParentFontEndChange m_fOnParentFontEndChange;
			FOnParentFontChangeSize m_fOnParentFontChangeSize;
			FOnParentFontChangeStyle m_fOnParentFontChangeStyle;
			
			FOnFontChangeName m_fOnFontChangeName;
			FOnFontChangeHeight m_fOnFontChangeHeight;
			FOnFontChangeWeight m_fOnFontChangeWeight;
			FOnFontChangeItalic m_fOnFontChangeItalic;
			FOnFontChangeUnderline m_fOnFontChangeUnderline;
			FOnFontChangeStrikeOut m_fOnFontChangeStrikeOut;
			FOnFontChangeWidth m_fOnFontChangeWidth;
			FOnFontChangeCharSet m_fOnFontChangeCharSet;
			FOnFontChangeQuality m_fOnFontChangeQuality;
			FOnFontChangePitchAndFamily m_fOnFontChangePitchAndFamily;
			FOnFontChangeOrientation m_fOnFontChangeOrientation;
			FOnFontChangeDistance m_fOnFontChangeDistance;
			FOnFontChangeShadow m_fOnFontChangeShadow;
			FOnFontChangeShadowShift m_fOnFontChangeShadowShift;
			FOnFontChangeShadowBlur m_fOnFontChangeShadowBlur;
			FOnFontChangeShadowColor m_fOnFontChangeShadowColor;
			FOnFontChangeColor m_fOnFontChangeColor;
			FOnFontChangeInterpolate m_fOnFontChangeInterpolate;
			FOnFontBeginChange m_fOnFontBeginChange;
			FOnFontEndChange m_fOnFontEndChange;
			FOnFontChangeSize m_fOnFontChangeSize;
			FOnFontChangeStyle m_fOnFontChangeStyle;

			FOnMouseHover m_fOnMouseHover;
			FOnMouseLeave m_fOnMouseLeave;
			FOnKillFocus m_fOnKillFocus;
			FOnSetFocus m_fOnSetFocus;
			FOnResetFocus m_fOnResetFocus;
			FOnKillCaptureKeyboard m_fOnKillCaptureKeyboard;
			FOnKillCaptureMouse m_fOnKillCaptureMouse;
			FOnSetCaptureKeyboard m_fOnSetCaptureKeyboard;
			FOnSetCaptureMouse m_fOnSetCaptureMouse;
			FOnChangeParentStyle m_fOnChangeParentStyle;
			FOnChangeStyle m_fOnChangeStyle;
			FOnShow m_fOnShow;
			FOnBeforeHide m_fOnBeforeHide;
			FOnHide m_fOnHide;
			FOnEnable m_fOnEnable;
			FOnDisable m_fOnDisable;
			FOnAttachControl m_fOnAttachControl;
			FOnBeforeDetachControl m_fOnBeforeDetachControl;
			FOnDetachControl m_fOnDetachControl;
			FOnPaint m_fOnPaint;
			FOnParentResize m_fOnParentResize;
			FOnParentMove m_fOnParentMove;
			FOnBeforeResize m_fOnBeforeResize;
			FOnResize m_fOnResize;
			FOnBeforeMove m_fOnBeforeMove;
			FOnMove m_fOnMove;
			FOnChildControlResize m_fOnChildControlResize;
			FOnChildControlMove m_fOnChildControlMove;
			FOnBeforeDetachFromControl m_fOnBeforeDetachFromControl;
			FOnDetachFromControl m_fOnDetachFromControl;
			FOnAttachToControl m_fOnAttachToControl;

			std::vector<CControl*> m_aControls;
			CControl *m_pParent;
			size_t m_iTabOrder;
			CStyle *m_pStyle;
			IFont *m_pFont;
			bool m_bIsFontChanging;
			bool m_bIsFontSizeChanged;
			bool m_bIsFontStyleChanged;
			APP_RECT m_sRect;
			CControl *m_pControlToUpdateAfterDetach;

			void Render(APP_RECT clip);
			void RemoveFromForm();
			void AddToForm(CForm *form, const bool to_root);
			CControl *FindNextAlignedControl(); // Find aligned control in parent, next to the current one(if this one is aligned and visible)
			void UpdateRectOfNextParentControl();
		protected:
			void NotifyOnBeforeDetachComponentFromForm(CComponent *component) override;
			void NotifyOnBeforeDetachControlFromForm(CControl *control) override;
			void NotifyOnUpdateComponent(CComponent *component) override;
			void NotifyOnUpdateControl(CControl *control) override;
			void NotifyOnUpdate() override;

			virtual bool NotifyOnKeyDown(const IWindow::KEY key);
			virtual bool NotifyOnKeyUp(const IWindow::KEY key);
			virtual bool NotifyOnChar(const wchar_t chr);
			virtual bool NotifyOnDeadChar(const wchar_t chr);
			virtual bool NotifyOnSysKeyDown(const IWindow::KEY key);
			virtual bool NotifyOnSysKeyUp(const IWindow::KEY key);
			virtual bool NotifyOnSysChar(const wchar_t chr);
			virtual bool NotifyOnSysDeadChar(const wchar_t chr);
			virtual bool NotifyOnMouseMove(const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift);
			virtual bool NotifyOnLeftMouseButtonDown(const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift);
			virtual bool NotifyOnLeftMouseButtonUp(const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift);
			virtual bool NotifyOnLeftMouseButtonDoubleClick(const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift);
			virtual bool NotifyOnRightMouseButtonDown(const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift);
			virtual bool NotifyOnRightMouseButtonUp(const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift);
			virtual bool NotifyOnRightMouseButtonDoubleClick(const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift);
			virtual bool NotifyOnMiddleMouseButtonDown(const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift);
			virtual bool NotifyOnMiddleMouseButtonUp(const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift);
			virtual bool NotifyOnMiddleMouseButtonDoubleClick(const int x, const int y, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift);
			virtual bool NotifyOnMouseVerticalWheel(const int x, const int y, const int delta, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift);
			virtual bool NotifyOnMouseHorizontalWheel(const int x, const int y, const int delta, const bool ctrl, const bool left, const bool middle, const bool right, const bool shift);

			virtual void NotifyOnChangeUseParentFont();
			virtual void NotifyOnParentFontChangeName();
			virtual void NotifyOnParentFontChangeHeight();
			virtual void NotifyOnParentFontChangeWeight();
			virtual void NotifyOnParentFontChangeItalic();
			virtual void NotifyOnParentFontChangeUnderline();
			virtual void NotifyOnParentFontChangeStrikeOut();
			virtual void NotifyOnParentFontChangeWidth();
			virtual void NotifyOnParentFontChangeCharSet();
			virtual void NotifyOnParentFontChangeQuality();
			virtual void NotifyOnParentFontChangePitchAndFamily();
			virtual void NotifyOnParentFontChangeOrientation();
			virtual void NotifyOnParentFontChangeDistance();
			virtual void NotifyOnParentFontChangeShadow();
			virtual void NotifyOnParentFontChangeShadowShift();
			virtual void NotifyOnParentFontChangeShadowBlur();
			virtual void NotifyOnParentFontChangeShadowColor();
			virtual void NotifyOnParentFontChangeColor();
			virtual void NotifyOnParentFontChangeInterpolate();
			virtual void NotifyOnParentFontBeginChange();
			virtual void NotifyOnParentFontEndChange();
			virtual void NotifyOnParentFontChangeSize();
			virtual void NotifyOnParentFontChangeStyle();
			
			virtual void NotifyOnFontChangeName();
			virtual void NotifyOnFontChangeHeight();
			virtual void NotifyOnFontChangeWeight();
			virtual void NotifyOnFontChangeItalic();
			virtual void NotifyOnFontChangeUnderline();
			virtual void NotifyOnFontChangeStrikeOut();
			virtual void NotifyOnFontChangeWidth();
			virtual void NotifyOnFontChangeCharSet();
			virtual void NotifyOnFontChangeQuality();
			virtual void NotifyOnFontChangePitchAndFamily();
			virtual void NotifyOnFontChangeOrientation();
			virtual void NotifyOnFontChangeDistance();
			virtual void NotifyOnFontChangeShadow();
			virtual void NotifyOnFontChangeShadowShift();
			virtual void NotifyOnFontChangeShadowBlur();
			virtual void NotifyOnFontChangeShadowColor();
			virtual void NotifyOnFontChangeColor();
			virtual void NotifyOnFontChangeInterpolate();
			virtual void NotifyOnFontBeginChange();
			virtual void NotifyOnFontEndChange();
			virtual void NotifyOnFontChangeSize();
			virtual void NotifyOnFontChangeStyle();

			virtual void NotifyOnMouseHover();
			virtual void NotifyOnMouseLeave();
			virtual void NotifyOnKillFocus();
			virtual void NotifyOnSetFocus(CControl *old);
			virtual void NotifyOnResetFocus();
			virtual void NotifyOnKillCaptureKeyboard();
			virtual void NotifyOnKillCaptureMouse();
			virtual void NotifyOnSetCaptureKeyboard();
			virtual void NotifyOnSetCaptureMouse();
			virtual void NotifyOnChangeParentStyle(); // Get params from style(if exists) and update control
			virtual void NotifyOnChangeStyle(); // Get params from style(if exists) and update control
			virtual void NotifyOnShow(); // Update control and parent controls(if aligned), repaint
			virtual void NotifyOnBeforeHide(); // Repaint control and children
			virtual void NotifyOnHide();
			virtual void NotifyOnEnable(); // Repaint control and children
			virtual void NotifyOnDisable(); // Repaint control and children
			virtual void NotifyOnAttachControl(CControl *control); // Update control after adding child one
			virtual void NotifyOnBeforeDetachControl(CControl *control); // Search and store control to be updated after detach of specified control. Repaint recursively
			virtual void NotifyOnDetachControl(CControl *control); // Update stored control if exists
			virtual void NotifyOnPaint(APP_RECT clip);
			virtual void NotifyOnParentResize(); // If aligned, update control and parent aligned controls
			virtual void NotifyOnParentMove();
			virtual void NotifyOnBeforeResize(); // Repaint recursively
			virtual void NotifyOnResize(const APP_POINT &old_size, const APP_POINT &new_size); // Send notifications and repaint recursively
			virtual void NotifyOnBeforeMove(); // Repaint recursively
			virtual void NotifyOnMove(const APP_POINT &old_position, const APP_POINT &new_position); // Send notifications and repaint recursively
			virtual void NotifyOnChildControlResize(CControl *control, const APP_POINT &old_size, const APP_POINT &new_size);
			virtual void NotifyOnChildControlMove(CControl *control, const APP_POINT &old_position, const APP_POINT &new_poisition);
			virtual void NotifyOnBeforeDetachFromControl(CControl *control);
			virtual void NotifyOnDetachFromControl(CControl *control);
			virtual void NotifyOnAttachToControl(CControl *control);

			CFontData m_cDefaultFont;
			bool m_bAcceptFocus;
			bool m_bAcceptForm;
			bool m_bAcceptControls;
			bool m_bAcceptParent;
			bool m_bSupportText;
			bool m_bVisible;
			bool m_bTabStop;
			bool m_bUseStyle;
			bool m_bUseParentFont;
			bool m_bEnabled;
			APP_RECT m_sInitialRect;
			math::RECTANGLE<size_t> m_sConstraints;
			ALIGN m_eAlign;
			CURSOR_TYPE m_eCursor;
			size_t m_iZIndex;

			bool getHaveChild(CControl *control);
			bool getIsFontChanging() const;
			bool getIsFontSizeChanged() const;
			bool getIsFontStyleChanged() const;

			virtual bool UpdateFromStyle();

			virtual FOnKeyDown getOnKeyDown() const;
			virtual FOnKeyUp getOnKeyUp() const;
			virtual FOnChar getOnChar() const;
			virtual FOnDeadChar getOnDeadChar() const;
			virtual FOnSysKeyDown getOnSysKeyDown() const;
			virtual FOnSysKeyUp getOnSysKeyUp() const;
			virtual FOnSysChar getOnSysChar() const;
			virtual FOnSysDeadChar getOnSysDeadChar() const;
			virtual FOnMouseMove getOnMouseMove() const;
			virtual FOnLeftMouseButtonDown getOnLeftMouseButtonDown() const;
			virtual FOnLeftMouseButtonUp getOnLeftMouseButtonUp() const;
			virtual FOnLeftMouseButtonDoubleClick getOnLeftMouseButtonDoubleClick() const;
			virtual FOnRightMouseButtonDown getOnRightMouseButtonDown() const;
			virtual FOnRightMouseButtonUp getOnRightMouseButtonUp() const;
			virtual FOnRightMouseButtonDoubleClick getOnRightMouseButtonDoubleClick() const;
			virtual FOnMiddleMouseButtonDown getOnMiddleMouseButtonDown() const;
			virtual FOnMiddleMouseButtonUp getOnMiddleMouseButtonUp() const;
			virtual FOnMiddleMouseButtonDoubleClick getOnMiddleMouseButtonDoubleClick() const;
			virtual FOnMouseVerticalWheel getOnMouseVerticalWheel() const;
			virtual FOnMouseHorizontalWheel getOnMouseHorizontalWheel() const;

			virtual FOnChangeUseParentFont getOnChangeUseParentFont() const;
			virtual FOnParentFontChangeName getOnParentFontChangeName() const;
			virtual FOnParentFontChangeHeight getOnParentFontChangeHeight() const;
			virtual FOnParentFontChangeWeight getOnParentFontChangeWeight() const;
			virtual FOnParentFontChangeItalic getOnParentFontChangeItalic() const;
			virtual FOnParentFontChangeUnderline getOnParentFontChangeUnderline() const;
			virtual FOnParentFontChangeStrikeOut getOnParentFontChangeStrikeOut() const;
			virtual FOnParentFontChangeWidth getOnParentFontChangeWidth() const;
			virtual FOnParentFontChangeCharSet getOnParentFontChangeCharSet() const;
			virtual FOnParentFontChangeQuality getOnParentFontChangeQuality() const;
			virtual FOnParentFontChangePitchAndFamily getOnParentFontChangePitchAndFamily() const;
			virtual FOnParentFontChangeOrientation getOnParentFontChangeOrientation() const;
			virtual FOnParentFontChangeDistance getOnParentFontChangeDistance() const;
			virtual FOnParentFontChangeShadow getOnParentFontChangeShadow() const;
			virtual FOnParentFontChangeShadowShift getOnParentFontChangeShadowShift() const;
			virtual FOnParentFontChangeShadowBlur getOnParentFontChangeShadowBlur() const;
			virtual FOnParentFontChangeShadowColor getOnParentFontChangeShadowColor() const;
			virtual FOnParentFontChangeColor getOnParentFontChangeColor() const;
			virtual FOnParentFontChangeInterpolate getOnParentFontChangeInterpolate() const;
			virtual FOnParentFontBeginChange getOnParentFontBeginChange() const;
			virtual FOnParentFontEndChange getOnParentFontEndChange() const;
			virtual FOnParentFontChangeSize getOnParentFontChangeSize() const;
			virtual FOnParentFontChangeStyle getOnParentFontChangeStyle() const;
			
			virtual FOnFontChangeName getOnFontChangeName() const;
			virtual FOnFontChangeHeight getOnFontChangeHeight() const;
			virtual FOnFontChangeWeight getOnFontChangeWeight() const;
			virtual FOnFontChangeItalic getOnFontChangeItalic() const;
			virtual FOnFontChangeUnderline getOnFontChangeUnderline() const;
			virtual FOnFontChangeStrikeOut getOnFontChangeStrikeOut() const;
			virtual FOnFontChangeWidth getOnFontChangeWidth() const;
			virtual FOnFontChangeCharSet getOnFontChangeCharSet() const;
			virtual FOnFontChangeQuality getOnFontChangeQuality() const;
			virtual FOnFontChangePitchAndFamily getOnFontChangePitchAndFamily() const;
			virtual FOnFontChangeOrientation getOnFontChangeOrientation() const;
			virtual FOnFontChangeDistance getOnFontChangeDistance() const;
			virtual FOnFontChangeShadow getOnFontChangeShadow() const;
			virtual FOnFontChangeShadowShift getOnFontChangeShadowShift() const;
			virtual FOnFontChangeShadowBlur getOnFontChangeShadowBlur() const;
			virtual FOnFontChangeShadowColor getOnFontChangeShadowColor() const;
			virtual FOnFontChangeColor getOnFontChangeColor() const;
			virtual FOnFontChangeInterpolate getOnFontChangeInterpolate() const;
			virtual FOnFontBeginChange getOnFontBeginChange() const;
			virtual FOnFontEndChange getOnFontEndChange() const;
			virtual FOnFontChangeSize getOnFontChangeSize() const;
			virtual FOnFontChangeStyle getOnFontChangeStyle() const;

			virtual FOnMouseHover getOnMouseHover() const;
			virtual FOnMouseLeave getOnMouseLeave() const;
			virtual FOnKillFocus getOnKillFocus() const;
			virtual FOnSetFocus getOnSetFocus() const;
			virtual FOnResetFocus getOnResetFocus() const;
			virtual FOnKillCaptureKeyboard getOnKillCaptureKeyboard() const;
			virtual FOnKillCaptureMouse getOnKillCaptureMouse() const;
			virtual FOnSetCaptureKeyboard getOnSetCaptureKeyboard() const;
			virtual FOnSetCaptureMouse getOnSetCaptureMouse() const;
			virtual FOnChangeParentStyle getOnChangeParentStyle() const;
			virtual FOnChangeStyle getOnChangeStyle() const;
			virtual FOnShow getOnShow() const;
			virtual FOnBeforeHide getOnBeforeHide() const;
			virtual FOnHide getOnHide() const;
			virtual FOnEnable getOnEnable() const;
			virtual FOnDisable getOnDisable() const;
			virtual FOnAttachControl getOnAttachControl() const;
			virtual FOnBeforeDetachControl getOnBeforeDetachControl() const;
			virtual FOnDetachControl getOnDetachControl() const;
			virtual FOnPaint getOnPaint() const;
			virtual FOnParentResize getOnParentResize() const;
			virtual FOnParentMove getOnParentMove() const;
			virtual FOnBeforeResize getOnBeforeResize() const;
			virtual FOnResize getOnResize() const;
			virtual FOnBeforeMove getOnBeforeMove() const;
			virtual FOnMove getOnMove() const;
			virtual FOnChildControlResize getOnChildControlResize() const;
			virtual FOnChildControlMove getOnChildControlMove() const;
			virtual FOnBeforeDetachFromControl getOnBeforeDetachFromControl() const;
			virtual FOnDetachFromControl getOnDetachFromControl() const;
			virtual FOnAttachToControl getOnAttachToControl() const;

			virtual CControl *setOnKeyDown(FOnKeyDown value);
			virtual CControl *setOnKeyUp(FOnKeyUp value);
			virtual CControl *setOnChar(FOnChar value);
			virtual CControl *setOnDeadChar(FOnDeadChar value);
			virtual CControl *setOnSysKeyDown(FOnSysKeyDown value);
			virtual CControl *setOnSysKeyUp(FOnSysKeyUp value);
			virtual CControl *setOnSysChar(FOnSysChar value);
			virtual CControl *setOnSysDeadChar(FOnSysDeadChar value);
			virtual CControl *setOnMouseMove(FOnMouseMove value);
			virtual CControl *setOnLeftMouseButtonDown(FOnLeftMouseButtonDown value);
			virtual CControl *setOnLeftMouseButtonUp(FOnLeftMouseButtonUp value);
			virtual CControl *setOnLeftMouseButtonDoubleClick(FOnLeftMouseButtonDoubleClick value);
			virtual CControl *setOnRightMouseButtonDown(FOnRightMouseButtonDown value);
			virtual CControl *setOnRightMouseButtonUp(FOnRightMouseButtonUp value);
			virtual CControl *setOnRightMouseButtonDoubleClick(FOnRightMouseButtonDoubleClick value);
			virtual CControl *setOnMiddleMouseButtonDown(FOnMiddleMouseButtonDown value);
			virtual CControl *setOnMiddleMouseButtonUp(FOnMiddleMouseButtonUp value);
			virtual CControl *setOnMiddleMouseButtonDoubleClick(FOnMiddleMouseButtonDoubleClick value);
			virtual CControl *setOnMouseVerticalWheel(FOnMouseVerticalWheel value);
			virtual CControl *setOnMouseHorizontalWheel(FOnMouseHorizontalWheel value);

			virtual CControl *setOnChangeUseParentFont(FOnChangeUseParentFont value);
			virtual CControl *setOnParentFontChangeName(FOnParentFontChangeName value);
			virtual CControl *setOnParentFontChangeHeight(FOnParentFontChangeHeight value);
			virtual CControl *setOnParentFontChangeWeight(FOnParentFontChangeWeight value);
			virtual CControl *setOnParentFontChangeItalic(FOnParentFontChangeItalic value);
			virtual CControl *setOnParentFontChangeUnderline(FOnParentFontChangeUnderline value);
			virtual CControl *setOnParentFontChangeStrikeOut(FOnParentFontChangeStrikeOut value);
			virtual CControl *setOnParentFontChangeWidth(FOnParentFontChangeWidth value);
			virtual CControl *setOnParentFontChangeCharSet(FOnParentFontChangeCharSet value);
			virtual CControl *setOnParentFontChangeQuality(FOnParentFontChangeQuality value);
			virtual CControl *setOnParentFontChangePitchAndFamily(FOnParentFontChangePitchAndFamily value);
			virtual CControl *setOnParentFontChangeOrientation(FOnParentFontChangeOrientation value);
			virtual CControl *setOnParentFontChangeDistance(FOnParentFontChangeDistance value);
			virtual CControl *setOnParentFontChangeShadow(FOnParentFontChangeShadow value);
			virtual CControl *setOnParentFontChangeShadowShift(FOnParentFontChangeShadowShift value);
			virtual CControl *setOnParentFontChangeShadowBlur(FOnParentFontChangeShadowBlur value);
			virtual CControl *setOnParentFontChangeShadowColor(FOnParentFontChangeShadowColor value);
			virtual CControl *setOnParentFontChangeColor(FOnParentFontChangeColor value);
			virtual CControl *setOnParentFontChangeInterpolate(FOnParentFontChangeInterpolate value);
			virtual CControl *setOnParentFontBeginChange(FOnParentFontBeginChange value);
			virtual CControl *setOnParentFontEndChange(FOnParentFontEndChange value);
			virtual CControl *setOnParentFontChangeSize(FOnParentFontChangeSize value);
			virtual CControl *setOnParentFontChangeStyle(FOnParentFontChangeStyle value);

			virtual CControl *setOnFontChangeName(FOnFontChangeName value);
			virtual CControl *setOnFontChangeHeight(FOnFontChangeHeight value);
			virtual CControl *setOnFontChangeWeight(FOnFontChangeWeight value);
			virtual CControl *setOnFontChangeItalic(FOnFontChangeItalic value);
			virtual CControl *setOnFontChangeUnderline(FOnFontChangeUnderline value);
			virtual CControl *setOnFontChangeStrikeOut(FOnFontChangeStrikeOut value);
			virtual CControl *setOnFontChangeWidth(FOnFontChangeWidth value);
			virtual CControl *setOnFontChangeCharSet(FOnFontChangeCharSet value);
			virtual CControl *setOnFontChangeQuality(FOnFontChangeQuality value);
			virtual CControl *setOnFontChangePitchAndFamily(FOnFontChangePitchAndFamily value);
			virtual CControl *setOnFontChangeOrientation(FOnFontChangeOrientation value);
			virtual CControl *setOnFontChangeDistance(FOnFontChangeDistance value);
			virtual CControl *setOnFontChangeShadow(FOnFontChangeShadow value);
			virtual CControl *setOnFontChangeShadowShift(FOnFontChangeShadowShift value);
			virtual CControl *setOnFontChangeShadowBlur(FOnFontChangeShadowBlur value);
			virtual CControl *setOnFontChangeShadowColor(FOnFontChangeShadowColor value);
			virtual CControl *setOnFontChangeColor(FOnFontChangeColor value);
			virtual CControl *setOnFontChangeInterpolate(FOnFontChangeInterpolate value);
			virtual CControl *setOnFontBeginChange(FOnFontBeginChange value);
			virtual CControl *setOnFontEndChange(FOnFontEndChange value);
			virtual CControl *setOnFontChangeSize(FOnFontChangeSize value);
			virtual CControl *setOnFontChangeStyle(FOnFontChangeStyle value);

			virtual CControl *setOnMouseHover(FOnMouseHover value);
			virtual CControl *setOnMouseLeave(FOnMouseLeave value);
			virtual CControl *setOnKillFocus(FOnKillFocus value);
			virtual CControl *setOnSetFocus(FOnSetFocus value);
			virtual CControl *setOnResetFocus(FOnResetFocus value);
			virtual CControl *setOnKillCaptureKeyboard(FOnKillCaptureKeyboard value);
			virtual CControl *setOnKillCaptureMouse(FOnKillCaptureMouse value);
			virtual CControl *setOnSetCaptureKeyboard(FOnSetCaptureKeyboard value);
			virtual CControl *setOnSetCaptureMouse(FOnSetCaptureMouse value);
			virtual CControl *setOnChangeParentStyle(FOnChangeParentStyle value);
			virtual CControl *setOnChangeStyle(FOnChangeStyle value);
			virtual CControl *setOnShow(FOnShow value);
			virtual CControl *setOnBeforeHide(FOnBeforeHide value);
			virtual CControl *setOnHide(FOnHide value);
			virtual CControl *setOnEnable(FOnEnable value);
			virtual CControl *setOnDisable(FOnDisable value);
			virtual CControl *setOnAttachControl(FOnAttachControl value);
			virtual CControl *setOnBeforeDetachControl(FOnBeforeDetachControl value);
			virtual CControl *setOnDetachControl(FOnDetachControl value);
			virtual CControl *setOnPaint(FOnPaint value);
			virtual CControl *setOnParentResize(FOnParentResize value);
			virtual CControl *setOnParentMove(FOnParentMove value);
			virtual CControl *setOnBeforeResize(FOnBeforeResize value);
			virtual CControl *setOnResize(FOnResize value);
			virtual CControl *setOnBeforeMove(FOnBeforeMove value);
			virtual CControl *setOnMove(FOnMove value);
			virtual CControl *setOnChildControlResize(FOnChildControlResize value);
			virtual CControl *setOnChildControlMove(FOnChildControlMove value);
			virtual CControl *setOnBeforeDetachFromControl(FOnBeforeDetachFromControl value);
			virtual CControl *setOnDetachFromControl(FOnDetachFromControl value);
			virtual CControl *setOnAttachToControl(FOnAttachToControl value);

			virtual CControl *getControlAtPosition(const int x, const int y);
			virtual bool getTabStop() const;
			virtual CStyle *getControlStyle();
			virtual CStyle *getStyle();
			virtual bool getUseStyle() const;
			virtual math::RECTANGLE<size_t> getConstraints() const;
			virtual math::POINT<size_t> getMinConstraints() const;
			virtual math::POINT<size_t> getMaxConstraints() const;
			virtual size_t getMinWidth() const;
			virtual size_t getMinHeight() const;
			virtual size_t getMaxWidth() const;
			virtual size_t getMaxHeight() const;
			virtual IFont *getControlFont();
			virtual IFont *getParentFont();
			virtual IFont *getFont();
			virtual bool getUseParentFont() const;
			virtual size_t getZIndex() const;

			virtual CControl *setParent(CControl *control);
			virtual CControl *setEnabled(const bool value);
			virtual CControl *setVisible(const bool value);
			virtual CControl *setAlign(const ALIGN value);
			virtual CControl *setTabStop(const bool value);
			virtual CControl *setStyle(CStyle *value);
			virtual CControl *setUseStyle(const bool value);
			virtual CControl *setConstraints(const math::RECTANGLE<size_t> &value);
			virtual CControl *setMinConstraints(const math::POINT<size_t> &value);
			virtual CControl *setMaxConstraints(const math::POINT<size_t> &value);
			virtual CControl *setMinWidth(const size_t value);
			virtual CControl *setMinHeight(const size_t value);
			virtual CControl *setMaxWidth(const size_t value);
			virtual CControl *setMaxHeight(const size_t value);
			virtual CControl *setControlFont(const IFont* value);
			virtual CControl *setFont(const IFont *value);
			virtual CControl *setUseParentFont(const bool value);
			virtual CControl *setFocus();
			virtual CControl *setRect(APP_RECT value);
			virtual CControl *setPosition(const APP_POINT &value);
			virtual CControl *setLeft(const int value);
			virtual CControl *setTop(const int value);
			virtual CControl *setSize(const size_t width, const size_t height);
			virtual CControl *setWidth(const int value);
			virtual CControl *setHeight(const int value);
			virtual CControl *setTabOrder(const size_t value);
			virtual CControl *setCursor(const CURSOR_TYPE value);
			virtual CControl *setZIndex(const size_t value);

			virtual CControl *AddControl(CControl *control);
			virtual CControl *InsertControl(CControl *control, const size_t before);
			virtual CControl *DeleteControl(const size_t index);
			virtual CControl *DeleteControl(CControl *control);
			virtual CControl *DetachControl(const size_t index);
			virtual CControl *DetachControl(CControl *control);
			virtual CControl *DeleteControls();
		public:
			CControl();
			~CControl() override;

			virtual bool getEnabled() const;
			virtual bool getVisible() const;
			virtual bool getVisibleWithParents() const;
			virtual bool getEnabledWithParents() const;
			virtual ALIGN getAlign() const;
			virtual CURSOR_TYPE getCursor() const;
			virtual CControl *getParent();
			virtual APP_RECT getRect(); // Original rectangle
			virtual APP_RECT getClientRect(); // Client area
			virtual APP_RECT getVisibleRect(); // Visible part(through parent controls) of render rectangle. In global coordinates
			virtual APP_RECT getRenderRect(); // Rendarable rectangle. May differ from getRect() due to shadow and other effects. By default call getCustomRenderRect(getRect())
			virtual APP_RECT getCustomRenderRect(const APP_RECT &rect); // Same as getRenderRect() but use specified rect instead of control one
			virtual APP_POINT getPosition();
			virtual APP_POINT getSize();
			virtual int getLeft();
			virtual int getTop();
			virtual int getWidth();
			virtual int getHeight();
			virtual size_t getTabOrder() const;
			virtual bool getAcceptFocus() const;
			virtual bool getAcceptForm() const;
			virtual bool getAcceptFormWithParents() const;
			virtual bool getAcceptControls() const;
			virtual bool getAcceptParent() const;
			virtual bool getSupportText() const;
			virtual size_t getControlCount() const;
			virtual CControl *getControl(const int index);

			bool setForm(CForm *value) override;
			bool setName(const String &value) override;

			virtual void UpdateRect();
			virtual void Repaint(const bool repaint_children);
			virtual void BringToFront();
			virtual void BringUp();
			virtual void BringDown();
			virtual void BringBefore(CControl *control);
			virtual void BringBefore(const size_t index);
			virtual void BringAfter(CControl *control);
			virtual void BringAfter(const size_t index);

			APP_RECT ClientToForm(const APP_RECT &rect);
			APP_POINT ClientToForm(const APP_POINT &pos);
			math::POINT<double> ClientToForm(const math::POINT<double> &pos);
			APP_RECT FormToClient(const APP_RECT &rect);
			APP_POINT FormToClient(const APP_POINT &pos);
		};
		/*
		using C::getOnKeyDown;
		using C::getOnKeyUp;
		using C::getOnChar;
		using C::getOnDeadChar;
		using C::getOnSysKeyDown;
		using C::getOnSysKeyUp;
		using C::getOnSysChar;
		using C::getOnSysDeadChar;
		using C::getOnMouseMove;
		using C::getOnLeftMouseButtonDown;
		using C::getOnLeftMouseButtonUp;
		using C::getOnLeftMouseButtonDoubleClick;
		using C::getOnRightMouseButtonDown;
		using C::getOnRightMouseButtonUp;
		using C::getOnRightMouseButtonDoubleClick;
		using C::getOnMiddleMouseButtonDown;
		using C::getOnMiddleMouseButtonUp;
		using C::getOnMiddleMouseButtonDoubleClick;
		using C::getOnMouseVerticalWheel;
		using C::getOnMouseHorizontalWheel;
		using C::getOnChangeUseParentFont;
		using C::getOnParentFontChangeName;
		using C::getOnParentFontChangeHeight;
		using C::getOnParentFontChangeWeight;
		using C::getOnParentFontChangeItalic;
		using C::getOnParentFontChangeUnderline;
		using C::getOnParentFontChangeStrikeOut;
		using C::getOnParentFontChangeWidth;
		using C::getOnParentFontChangeCharSet;
		using C::getOnParentFontChangeQuality;
		using C::getOnParentFontChangePitchAndFamily;
		using C::getOnParentFontChangeOrientation;
		using C::getOnParentFontChangeDistance;
		using C::getOnParentFontChangeShadow;
		using C::getOnParentFontChangeShadowShift;
		using C::getOnParentFontChangeShadowBlur;
		using C::getOnParentFontChangeShadowColor;
		using C::getOnParentFontChangeColor;
		using C::getOnParentFontChangeInterpolate;
		using C::getOnParentFontBeginChange;
		using C::getOnParentFontEndChange;
		using C::getOnParentFontChangeSize;
		using C::getOnParentFontChangeStyle;
		using C::getOnFontChangeName;
		using C::getOnFontChangeHeight;
		using C::getOnFontChangeWeight;
		using C::getOnFontChangeItalic;
		using C::getOnFontChangeUnderline;
		using C::getOnFontChangeStrikeOut;
		using C::getOnFontChangeWidth;
		using C::getOnFontChangeCharSet;
		using C::getOnFontChangeQuality;
		using C::getOnFontChangePitchAndFamily;
		using C::getOnFontChangeOrientation;
		using C::getOnFontChangeDistance;
		using C::getOnFontChangeShadow;
		using C::getOnFontChangeShadowShift;
		using C::getOnFontChangeShadowBlur;
		using C::getOnFontChangeShadowColor;
		using C::getOnFontChangeColor;
		using C::getOnFontChangeInterpolate;
		using C::getOnFontBeginChange;
		using C::getOnFontEndChange;
		using C::getOnFontChangeSize;
		using C::getOnFontChangeStyle;
		using C::getOnMouseHover;
		using C::getOnMouseLeave;
		using C::getOnKillFocus;
		using C::getOnSetFocus;
		using C::getOnResetFocus;
		using C::getOnKillCaptureKeyboard;
		using C::getOnKillCaptureMouse;
		using C::getOnSetCaptureKeyboard;
		using C::getOnSetCaptureMouse;
		using C::getOnChangeParentStyle;
		using C::getOnChangeStyle;
		using C::getOnShow;
		using C::getOnBeforeHide;
		using C::getOnHide;
		using C::getOnEnable;
		using C::getOnDisable;
		using C::getOnAttachControl;
		using C::getOnBeforeDetachControl;
		using C::getOnDetachControl;
		using C::getOnPaint;
		using C::getOnParentResize;
		using C::getOnParentMove;
		using C::getOnBeforeResize;
		using C::getOnResize;
		using C::getOnBeforeMove;
		using C::getOnMove;
		using C::getOnChildControlResize;
		using C::getOnChildControlMove;
		using C::getOnHotkey;
		using C::getOnBeforeDetachFromControl;
		using C::getOnDetachFromControl;
		using C::getOnAttachToControl;
		using C::setOnKeyDown;
		using C::setOnKeyUp;
		using C::setOnChar;
		using C::setOnDeadChar;
		using C::setOnSysKeyDown;
		using C::setOnSysKeyUp;
		using C::setOnSysChar;
		using C::setOnSysDeadChar;
		using C::setOnMouseMove;
		using C::setOnLeftMouseButtonDown;
		using C::setOnLeftMouseButtonUp;
		using C::setOnLeftMouseButtonDoubleClick;
		using C::setOnRightMouseButtonDown;
		using C::setOnRightMouseButtonUp;
		using C::setOnRightMouseButtonDoubleClick;
		using C::setOnMiddleMouseButtonDown;
		using C::setOnMiddleMouseButtonUp;
		using C::setOnMiddleMouseButtonDoubleClick;
		using C::setOnMouseVerticalWheel;
		using C::setOnMouseHorizontalWheel;
		using C::setOnChangeUseParentFont;
		using C::setOnParentFontChangeName;
		using C::setOnParentFontChangeHeight;
		using C::setOnParentFontChangeWeight;
		using C::setOnParentFontChangeItalic;
		using C::setOnParentFontChangeUnderline;
		using C::setOnParentFontChangeStrikeOut;
		using C::setOnParentFontChangeWidth;
		using C::setOnParentFontChangeCharSet;
		using C::setOnParentFontChangeQuality;
		using C::setOnParentFontChangePitchAndFamily;
		using C::setOnParentFontChangeOrientation;
		using C::setOnParentFontChangeDistance;
		using C::setOnParentFontChangeShadow;
		using C::setOnParentFontChangeShadowShift;
		using C::setOnParentFontChangeShadowBlur;
		using C::setOnParentFontChangeShadowColor;
		using C::setOnParentFontChangeColor;
		using C::setOnParentFontChangeInterpolate;
		using C::setOnParentFontBeginChange;
		using C::setOnParentFontEndChange;
		using C::setOnParentFontChangeSize;
		using C::setOnParentFontChangeStyle;
		using C::setOnFontChangeName;
		using C::setOnFontChangeHeight;
		using C::setOnFontChangeWeight;
		using C::setOnFontChangeItalic;
		using C::setOnFontChangeUnderline;
		using C::setOnFontChangeStrikeOut;
		using C::setOnFontChangeWidth;
		using C::setOnFontChangeCharSet;
		using C::setOnFontChangeQuality;
		using C::setOnFontChangePitchAndFamily;
		using C::setOnFontChangeOrientation;
		using C::setOnFontChangeDistance;
		using C::setOnFontChangeShadow;
		using C::setOnFontChangeShadowShift;
		using C::setOnFontChangeShadowBlur;
		using C::setOnFontChangeShadowColor;
		using C::setOnFontChangeColor;
		using C::setOnFontChangeInterpolate;
		using C::setOnFontBeginChange;
		using C::setOnFontEndChange;
		using C::setOnFontChangeSize;
		using C::setOnFontChangeStyle;
		using C::setOnMouseHover;
		using C::setOnMouseLeave;
		using C::setOnKillFocus;
		using C::setOnSetFocus;
		using C::setOnResetFocus;
		using C::setOnKillCaptureKeyboard;
		using C::setOnKillCaptureMouse;
		using C::setOnSetCaptureKeyboard;
		using C::setOnSetCaptureMouse;
		using C::setOnChangeParentStyle;
		using C::setOnChangeStyle;
		using C::setOnShow;
		using C::setOnBeforeHide;
		using C::setOnHide;
		using C::setOnEnable;
		using C::setOnDisable;
		using C::setOnAttachControl;
		using C::setOnBeforeDetachControl;
		using C::setOnDetachControl;
		using C::setOnPaint;
		using C::setOnParentResize;
		using C::setOnParentMove;
		using C::setOnBeforeResize;
		using C::setOnResize;
		using C::setOnBeforeMove;
		using C::setOnMove;
		using C::setOnChildControlResize;
		using C::setOnChildControlMove;
		using C::setOnHotkey;
		using C::setOnBeforeDetachFromControl;
		using C::setOnDetachFromControl;
		using C::setOnAttachToControl;
		using C::getControlAtPosition;
		using C::getTabStop;
		using C::getControlStyle;
		using C::getStyle;
		using C::getUseStyle;
		using C::getConstraints;
		using C::getMinConstraints;
		using C::getMaxConstraints;
		using C::getMinWidth;
		using C::getMinHeight;
		using C::getMaxWidth;
		using C::getMaxHeight;
		using C::getControlFont;
		using C::getParentFont;
		using C::getFont;
		using C::getUseParentFont;
		using C::getZIndex;
		using C::setParent;
		using C::setEnabled;
		using C::setVisible;
		using C::setAlign;
		using C::setTabStop;
		using C::setStyle;
		using C::setUseStyle;
		using C::setConstraints;
		using C::setMinConstraints;
		using C::setMinWidth;
		using C::setMinHeight;
		using C::setMaxWidth;
		using C::setMaxHeight;
		using C::setControlFont;
		using C::setFont;
		using C::setUseParentFont;
		using C::setFocus;
		using C::setRect;
		using C::setPosition;
		using C::setLeft;
		using C::setTop;
		using C::setSize;
		using C::setWidth;
		using C::setHeight;
		using C::setTabOrder;
		using C::setCursor;
		using C::setZIndex;
		using C::AddControl;
		using C::InsertControl;
		using C::DeleteControl;
		using C::DetachControl;
		using C::DeleteControls;
		*/
	}
}